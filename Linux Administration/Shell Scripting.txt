################ Bash Shell Scripting  ####################

Bash
    Bash is a command language interpreter. It is widely available on various operating systems and is a default command interpreter on most GNU/Linux systems. The name is an acronym for the ‘Bourne-Again SHell’.
Shell
    Shell is a macro processor which allows for an interactive or non-interactive command execution. 
Scripting
    Scripting allows for an automatic commands execution that would otherwise be executed interactively one-by-one. 


BashBang
Scripts are also identified with a shebang. Shebang is a combination of bash # and bang !  followed the the bash shell path. This is the first line of the script. Shebang tells the shell to execute it via bash shell. 
Shebang is simply an absolute path to the bash interpreter.

execution rights
chmod 755 script.sh


###########Arithmetic Expressions
+ 	addition
- 	subtraction
* 	multiplication
/ 	division
** 	exponentiation
% 	modulus

Syntax:		var=$((expression))


########### Read user input

syntax:		read variable_name

########### Display output

syntax:		echo "this is test print"


########## Numeric Comparison logical operators

Equality 		num1 -eq num2 		is num1 equal to num2
Greater than equal to 	num1 -ge num2 		is num1 greater than equal to num2
Greater than 		num1 -gt num2 		is num1 greater than num2
Less than equal to 	num1 -le num2 		is num1 less than equal to num2
Less than 		num1 -lt num2 		is num1 less than num2
Not Equal to 		num1 -ne num2 		is num1 not equal to num2

############ Conditional Statements

Conditions are expressions that evaluate to a boolean expression (true or false). To check conditions, we can use if, if-else, 
if-elif-else and nested conditionals.

The structure of conditional statements is as follows:

    if...then...fi statements
    if...then...else...fi statements
    if..elif..else..fi
    if..then..else..if..then..fi..fi.. (Nested Conditionals)


Syntax:

if [[ condition ]]
then
	statement
elif [[ condition ]]; then
	statement 
else
	do this by default
fi

To create meaningful comparisons, we can use AND -a and OR -o as well









